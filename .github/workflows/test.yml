name: ðŸ§ª

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:

env: ${{ secrets }}

jobs:
  upstream:
    runs-on: ubuntu-latest

    steps:
      - name: upstream infos
        id: upstream
        run: |
          release=$(curl -sL "https://api.github.com/repos/lukes/ISO-3166-Countries-with-Regional-Codes/releases/latest")

          version=$(echo "${release}" | jq -r ".tag_name")
          url=$(echo "${release}" | jq -r ".tarball_url")

          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "url=${url}" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: cache
        with:
          key: upstream-${{ steps.cache.outputs.version }}
          path: .upstream

      - name: download release
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir .upstream
          curl -sL "${${{ steps.outputs.upstream.url }}}" | tar xz --directory=.upstream --strip-components=1

  only-changed:
    runs-on: ubuntu-latest

    outputs:
      workspaces: ${{ steps.diff.outputs.result }}

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: find workspaces which have changed
        uses: ./.github/actions/diff
        id: diff

  test:
    runs-on: ubuntu-latest
    needs: [upstream, only-changed]

    # should have at least one workspace to run (cannot have empty matrix)
    if: fromJSON(needs.only-changed.outputs.workspaces)[0] != null

    strategy:
      matrix:
        workspace: ${{ fromJSON(needs.only-changed.outputs.workspaces) }}
      fail-fast: false

    steps:
      - uses: actions/cache@v4
        with:
          restore-keys: |
            upstream-

      - name: checkout repository
        uses: actions/checkout@v4

      - uses: jdx/mise-action@v2
        with:
          experimental: true
          working_directory: ${{ matrix.workspace }}

      # https://github.com/jdx/mise-action/issues/36#issuecomment-1925939877
      - name: export mise env
        working-directory: ${{ matrix.workspace }}
        run: |
          mise env -s bash \
            | grep -v 'export PATH=' \
            | cut -d' ' -f2 \
            >> "$GITHUB_ENV"

      - uses: actions/cache@v4
        id: cache
        with:
          key: ${{ hashFiles(env.CI_CACHE_KEY) }}
          path: ${{ env.CI_CACHE_PATH }}

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ${{ matrix.workspace }}
        run: mise tasks run install

      - name: run tests
        working-directory: ${{ matrix.workspace }}
        run: mise tasks run test

      - name: try building
        working-directory: ${{ matrix.workspace }}
        run: mise tasks run build
